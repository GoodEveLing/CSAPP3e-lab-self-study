# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

.align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
# Destination block
dst:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:	
    irmovq src,%rdi
    irmovq dst,%rsi
	irmovq $3,%rdx
	call copy
	ret

copy:	
    irmovq $8,%r8        # Constant 8
	irmovq $1,%r9	     # Constant 1
	xorq %rax,%rax	     # sum = 0
	andq %rdx,%rdx	     # Set CC
	jmp     test         # Goto test
loop:
	mrmovq (%rdi),%r10   # val = *src
    rmmovq %r10,(%rsi)   # dst = src
	xorq %r10,%rax       # Add to sum
    addq %r8, %rdi
    addq %r8, %rsi
	subq %r9,%rdx        # len --
test:	
    jne    loop          # Stop when 0
	ret                  # Return

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:

                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 805800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Array of 4 elements
0x018:                      | 	.align 8
0x018:                      | src:	
0x018: 0d000d000d000000     |     .quad 0x000d000d000d
0x020: c000c000c0000000     | 	.quad 0x00c000c000c0
0x028: 000b000b000b0000     | 	.quad 0x0b000b000b00
0x030: 00a000a000a00000     | 	.quad 0xa000a000a000
                            | 
0x038:                      | dst:	
0x038: 1101000000000000     |     .quad 0x111
0x040: 2202000000000000     | 	.quad 0x222
0x048: 3303000000000000     | 	.quad 0x333
0x050: 4404000000000000     | 	.quad 0x444
                            | 
0x058:                      | main:	
0x058: 30f71800000000000000 |     irmovq src,%rdi
0x062: 30f63800000000000000 |     irmovq dst,%rsi
0x06c: 30f20400000000000000 | 	irmovq $4,%rdx
0x076: 808000000000000000   | 	call copy
0x07f: 90                   | 	ret
                            | 
0x080:                      | copy:	
0x080: 30f80800000000000000 |     irmovq $8,%r8        # Constant 8
0x08a: 30f90100000000000000 | 	irmovq $1,%r9	     # Constant 1
0x094: 6300                 | 	xorq %rax,%rax	     # sum = 0
0x096: 6222                 | 	andq %rdx,%rdx	     # Set CC
0x098: 70bd00000000000000   | 	jmp     test         # Goto test
0x0a1:                      | loop:
0x0a1: 50a70000000000000000 | 	mrmovq (%rdi),%r10   # val = *src
0x0ab: 40a60000000000000000 |     rmmovq %r10,(%rsi)   # dst = src
0x0b5: 63a0                 | 	xorq %r10,%rax       # Add to sum
0x0b7: 6087                 |     addq %r8, %rdi
0x0b9: 6086                 |     addq %r8, %rsi
0x0bb: 6192                 | 	subq %r9,%rdx        # len --
0x0bd:                      | test:	
0x0bd: 74a100000000000000   |     jne    loop          # Stop when 0
0x0c6: 90                   | 	ret                  # Return
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:
